####################################################################################################
#                       TMUX COMMAND SHORTCUTS                                                     #
###################################################################################################
#  bind is short for bind-key
# tmux source-file ~/.tmux.conf is used to source the file
# change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-f

# split windows to panes using | and - while keeping the current path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind W command-prompt "new-window -n %1 -c '#{pane_current_path}'"
bind S command-prompt "new-session -s %1 -c '#{pane_current_path}'"
bind '/' command-prompt -p "session abbr:" "run 'tmux switch -t $(tmux ls -F \"##{session_created}:##{session_name}\" | sort -n | grep \':%%\' | head -n 1 | cut -d \':\' -f 2)'"
bind-key -n C-S-Up select-window -t -1
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

unbind '"'
unbind %

bind g new-window -n "gh-dash" "gh dash"

# Easy config reloads
unbind r
bind r move-window -d -r \; source-file ~/.tmux.conf \;

# Enable killing session
bind X confirm-before "kill-session -t ''"

# Switch panes using Alt-arrow without prefix
bind -n M-left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on # for tmux 2.1 and above
# set -g mouse-select-window on
set -g allow-rename off

# Prompted join-pane
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# TODO: When there are multiple pane the choose the last window as the last pane
# I really don't need this because I have shift L for last client
# bind-key l if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'

# search man enable search man page
bind-key b set-option status
# bind-key / command-prompt "split-window 'exec man %%'"

set-option -s focus-events on
set-option -s extended-keys on
set-option -s escape-time 0

set -g status-justify absolute-centre

####################################################################################################
#                       TMUX COPY PASTING                                                          #
####################################################################################################

# set-window-option -g mode-keys vi
# Use vim keybindings in copy mode
setw -g mode-keys vi

# this line below disable the copying to the system buffer
# set -s set-clipboard off

# Define a shell command to get the operating system type
set -g @os-type "#{shell 'uname | grep -iq \"darwin\" && echo macos || echo linux'}"

# NOTE you can use "+y to copy inside vim
# if you are on MacOS you should enable clipboard
# Go iTem2 -> preference->general ->selection -> check "Applications in terminal may access clipboard"
bind -T copy-mode-vi v send-keys -X begin-selection
bind P paste-buffer
bind -T copy-mode-vi y send-keys -X rectangle-toggle

# Use the @os-type variable in your bind command
bind -T copy-mode-vi y send-keys \
	-X copy-pipe-and-cancel "#{@os-type eq 'macos' ? 'pbcopy' : 'xclip -selection clipboard'}"

# Use the @os-type variable in your bind command
bind -T copy-mode-vi MouseDragEnd1Pane send-keys \
	-X copy-pipe-and-cancel "#{@os-type eq 'macos' ? 'pbcopy' : 'xclip -selection clipboard'}"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

####################################################################################################
#                       DESIGN CHANGES                                                             #
###################################################################################################

# loud or quiet ?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g monitor-activity off
set -g bell-action none
#
# modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

## panes
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

## Vim-Airline for tmux
set -g status on
## statusbar
set -g status-position top


set -g @pomodoro_toggle 'p' # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P' # Cancel the current session
set -g @pomodoro_skip 'k'   # Skip a Pomodoro/break

set -g @pomodoro_mins 30            # The duration of the Pomodoro
set -g @pomodoro_break_mins 5       # The duration of the break after the Pomodoro completes
set -g @pomodoro_intervals 2        # The number of intervals before a longer break is started
set -g @pomodoro_long_break_mins 15 # The duration of the long break
set -g @pomodoro_repeat 'on'        # Automatically repeat the Pomodoros?
set -g @pomodoro_start 'on'         # Automatically repeat the Pomodoros?

set -g @pomodoro_on " #[fg=#ff5555]🍅 "
set -g @pomodoro_complete "#[fg=#50fa7b] ✔︎"               # The formatted output when the break is running
set -g @pomodoro_pause "#[fg=#f1fa8c] ⏸︎"                  # The formatted output when the Pomodoro/break is paused
set -g @pomodoro_prompt_break " ⏲︎ break?"    # The formatted output when waiting to start a break
set -g @pomodoro_prompt_pomodoro " ⏱︎ start?" # The formatted output when waiting to start a Pomodoro

set -g @pomodoro_menu_position "R"  # The location of the menu relative to the screen
set -g @pomodoro_sound 'on'         # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)
set -g @pomodoro_notifications 'on' # Enable desktop notifications from your terminal
set -g @pomodoro_granularity 'on'  # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)

set -g @rose_pine_variant 'moon' # Options are 'main', 'moon' or 'dawn'


# Example values for these can be:
set -g @rose_pine_left_separator ' > ' # The strings to use as separators are 1-space padded
set -g @rose_pine_right_separator ' < ' # Accepts both normal chars & nerdfont icons
set -g @rose_pine_field_separator ' | ' # Again, 1-space padding, it updates with prefix + I
set -g @rose_pine_window_separator ' - ' # Replaces the default `:` between the window number and name

# These are not padded
set -g @rose_pine_session_icon '' # Changes the default icon to the left of the session name
set -g @rose_pine_current_window_icon '' # Changes the default icon to the left of the active window name
set -g @rose_pine_folder_icon '' # Changes the default icon to the left of the current directory folder
set -g @rose_pine_username_icon '' # Changes the default icon to the right of the hostname
set -g @rose_pine_hostname_icon '󰒋' # Changes the default icon to the right of the hostname
set -g @rose_pine_date_time_icon '󰃰' # Changes the default icon to the right of the date module
set -g @rose_pine_window_status_separator "  " # Changes the default icon that appears between window names

# Very beta and specific opt-in settings, tested on v3.2a, look at issue #10
set -g @rose_pine_prioritize_windows 'on' # Disables the right side functionality in a certain window count / terminal width
set -g @rose_pine_width_to_hide '80' # Specify a terminal width to toggle off most of the right side functionality
set -g @rose_pine_window_count '5' # Specify a number of windows, if there are more than the number, do the same as width_to_hide

set -g @rose_pine_show_left_icon 'session' # Options are 'session', 'smiley', 'window' or any character

# set -g @rose_pine_host 'on' # Enables hostname in the status bar
set -g @rose_pine_date_time '' # It accepts the date UNIX command format (man date for info)
set -g @rose_pine_user 'off' # Turn on the username component in the statusbar
set -g @rose_pine_directory 'on' # Turn on the current folder component in the status bar
set -g @rose_pine_bar_bg_disable 'on' # Disables background color, for transparent terminal emulators
# # If @rose_pine_bar_bg_disable is set to 'on', uses the provided value to set the background color
# # It can be any of the on tmux (named colors, 256-color set, `default` or hex colors)
# # See more on http://man.openbsd.org/OpenBSD-current/man1/tmux.1#STYLES
# set -g @rose_pine_bar_bg_disabled_color_option 'default'
#
# set -g @rose_pine_only_windows 'on' # Leaves only the window module, for max focus and space
# set -g @rose_pine_disable_active_window_menu 'on' # Disables the menu that shows the active window on the left
#
# set -g @rose_pine_default_window_behavior 'on' # Forces tmux default window list behaviour
set -g @rose_pine_show_current_program 'on' # Forces tmux to show the current running program as window name
# set -g @rose_pine_show_pane_directory 'on' # Forces tmux to show the current directory as window name
# Add to the beginning / end of the left and right sections your own.
# # Previously set -g @rose_pine_window_tabs_enabled
# set -g @rose_pine_status_left_prepend_section '#{tmux_mode_indicator}'
# set -g @rose_pine_status_left_append_section ''

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# set -g status-right "#{E:@catppuccin_status_pomodoro_plus}"
# set -g @rose_pine_status_right_prepend_section '#{git}'
set -g @rose_pine_status_right_append_section '#{pomodoro_status}'

set -g status-interval 1 # might create duplication  Refresh the status line every second need


set -g @tome_key "h" #  Set the length of the left status bar

# continuum setup
set -g @continuum-save-interval '5'
set -g @continuum-restore 'on'

####################################################################################################
#                       TMP plugins                                                                #
###################################################################################################

# install dracula for tmux
set -g @plugin 'rose-pine/tmux'
set -g @plugin 'omerxx/tmux-sessionx'

set -g @plugin 'laktak/tome'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# install pomodoro-plus
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# install tmux resurrect for saving and restoring session
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
