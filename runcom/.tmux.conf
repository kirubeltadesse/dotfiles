####################################################################################################
#                       TMUX COMMAND SHORTCUTS                                                     #
###################################################################################################
# NOTE: 
#  set is short for set-option and 
#  bind is short for bind-key
# tmux source-file ~/.tmux.conf is used to source the file 
# change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# split windows to panes using | and - while keeping the current path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Up select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

unbind '"'
unbind %

# Easy config reloads
unbind r
bind r source-file ~/.tmux.conf \;

# Enable killing session 
bind X confirm-before "kill-session -t ''"

# Switch panes using Alt-arrow without prefix
bind -n M-left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse control (clickable windows, panes, resizable panes)
# set -g mouse-select-window on
# tmxu display things in 256 colors

# enbale termial compability
#set -ga terminal-overrides ",tmux-256color-italic:Tc"

set -g status-left '#T'
set -g default-terminal "screen-256color"

# set -g default-terminal "screen-256color"

# enbale termial compability
# set -ga terminal-overrides ",tmux-256color-italic:Tc"

set -g mouse on # for tmux 2.1 and above
set -g allow-rename off

bind < resize-pane -L 5 
bind > resize-pane -R 5
bind ^ resize-pane -U 5
bind v resize-pane -D 5

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Use vim keybindings in copy mode
# set-window-option -g mode-keys vi
setw -g mode-keys vi

# this line below disable the copying to the system buffer
# set -s set-clipboard off

# Define a shell command to get the operating system type
set -g @os-type "#{shell 'uname | grep -iq \"darwin\" && echo macos || echo linux'}"


# NOTE you can use "+y to copy inside vim 
# if you are on MacOS you should enable clipboard
# Go iTem2 -> preference->general ->selection -> check "Applications in terminal may access clipboard"
bind -T copy-mode-vi v send-keys -X begin-selection
bind P paste-buffer
bind -T copy-mode-vi y send-keys -X rectangle-toggle

# Use the @os-type variable in your bind command
bind -T copy-mode-vi y send-keys \
 -X copy-pipe-and-cancel "#{@os-type eq 'macos' ? 'pbcopy' : 'xclip -selection clipboard'}"

# Use the @os-type variable in your bind command
bind -T copy-mode-vi MouseDragEnd1Pane send-keys \
 -X copy-pipe-and-cancel "#{@os-type eq 'macos' ? 'pbcopy' : 'xclip -selection clipboard'}" 


####################################################################################################
#                       TMUX NAVIGATION                                                            #
###################################################################################################

isVim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ln?vim?x?)(diff)?$'"

isFzf="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($isVim && tmux send-keys C-h) || \
							tmux select-pane -L"

bind -n C-j run "($isVim && tmux send-keys C-j) || \
							($isFzf && tmux send-keys C-j) || \
							tmux select-pane -D"

bind -n C-k run "($isVim && tmux send-keys C-k) || \
							($isFzf && tmux send-keys C-k) || \
							tmux select-pane -U"

bind -n C-l run "($isVim && tmux send-keys C-l) || \
							tmux select-pane -R"

#bind -n C-g run "($isVim && tmux send-keys C-g) || \
							tmux send-keys clear \; clear-history "

# bind -n C-d if-shell "$isVim" "send-keys C-d" "send-keys clear \; clear-history"

####################################################################################################
#                       DESIGN CHANGES                                                             #
###################################################################################################

# loud or quiet ?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g monitor-activity off
set -g bell-action none
#
# modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

## panes
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

## statusbar 
set -g status-position bottom
set -g status-justify left
set -g status-left ''

### Vim-Airline for tmux 
set -g status on

set -g @dracula-show-powerline true

# it can accept `session`, `smiley`, `window`, or any character.
set -g @dracula-show-left-icon session

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, weather, time
set -g @dracula-plugins "git cpu-usage ram-usage time"

# default is ✓. Avoid using non unicode characters that bash uses like $, * and ! 
set -g @dracula-git-show-current-symbol ✓

# for left
set -g @dracula-show-left-sep  ⮀

# for right symbol (can set any symbol you like as seperator)
set -g @dracula-show-right-sep ◀
 

####################################################################################################
#                       TMP plugins                                                             #
###################################################################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# install dracula for tmux
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'dracula/tmux'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


