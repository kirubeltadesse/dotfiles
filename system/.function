# Create a new directory and enter it
function mk() {
	mkdir -p "$@" && cd "$@"
}

# Open man page as PDF
function manpdf() {
	man -t "${1}" | open -f -a /Application/Preview.app/
}

# clip what is on the terminal
function copy() {
	cat "${1}" | clip.exe
}

# change a directory to unix
function dos2unixd() {
	find $1 -type f -print0 | xargs -0 dos2unix
}

# copy date
function dt() {
	operation="${1}"
	value="${2}"
	add_word="${@:3}"

	local FORMATE=$(date +"%a %b(%m) %d %Y %l:%M%p %Z")

	# Check if no arguments are provided
	if [ $# -eq 0 ]; then
		echo "## ${FORMATE}"
		return
	fi

	# check if the days argument is provided and is valid number
	if [[ -z "$value" || ! "$operation$value" =~ ^[+-]?[0-9]+$ ]]; then
		echo "Usage: dt [<operation>] [<days>]"
		return 1
	fi

	local FORMATE=$(date "-v${operation}${value}d" +"%a %b(%m) %d %Y %l:%M%p %Z")
	echo "## ${FORMATE} ${add_word}"

} && export -f dt

function temp() {
	echo "
### done
### hampering
### proposed solution"

} && export -f temp

# Default prefix character
pre="#"

# Function to filter input arguments
function _filter() {
	[[ -n "$1" ]] && return 1
	while IFS= read -ra args; do
		"${FUNCNAME[1]}" "${args[@]}"
	done
} && export -f _filter

# Function to print a string with a horizontal rule around it
htitle() {
	# Apply filter if provided
	_filter "$@" && return $?

	local str="${1:-}"                                                     # String to be centered
	local char="${2:----------------------------------------------------}" # Character for horizontal rule
	local HRULEWIDTH=4                                                    # Width of horizontal rule

	local len=${#str}                      # Length of the string
	local side=$(((HRULEWIDTH - len) / 2)) # Length of each side of the rule

	# Print the title with the horizontal rule
	printf "#%s %s %s %s" "$pre" "$(printf "%-${side}s" "$char")" "$str" "$(printf "%-${side}s" "$char" "$pre")"
} && export -f htitle
